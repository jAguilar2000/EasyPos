@model EasyPos.Models.Usuario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 col-sm-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Crear Usuario</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group col-md-6 col-sm-6 has-feedback">
                                    @Html.EditorFor(model => model.usuario1, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Usuario" } })
                                    <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(model => model.usuario1, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-6 col-sm-6 has-feedback">
                                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Nombre" } })
                                    <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-6 col-sm-6 has-feedback">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Email" } })
                                    <span class="fa fa-envelope form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-6 col-sm-6 has-feedback">
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Contaseña", type="password" } })
                                    <span class="fa fa-key form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-success">
                                            <i class="fa fa-save"></i> Guardar
                                        </button>

                                        <a class="btn btn-dark" href="@Url.Action("Index")">
                                            <i class="fa fa-arrow-left"></i> Regresar
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
