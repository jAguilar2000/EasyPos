@model EasyPos.Models.Inventario


@using (Html.BeginForm("Edit", "Inventario", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.inventarioId)

        <div class="form-group col-md-6 col-sm-6 has-feedback">
            @Html.EditorFor(model => model.productoId, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "ProductoId", autocomplete = "off" } })
            <span class="fa fa-box-open form-control-feedback left" aria-hidden="true"></span>
            @Html.ValidationMessageFor(model => model.productoId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6 col-sm-6 has-feedback">
            @Html.EditorFor(model => model.stockMin, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Stock Mínimo", autocomplete = "off" } })
            <span class="fa fa-box form-control-feedback left" aria-hidden="true"></span>
            @Html.ValidationMessageFor(model => model.stockMin, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6 col-sm-6 has-feedback">
            @Html.EditorFor(model => model.stockMax, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Stock Máximo", autocomplete = "off" } })
            <span class="fa fa-boxes form-control-feedback left" aria-hidden="true"></span>
            @Html.ValidationMessageFor(model => model.stockMax, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6 col-sm-6 has-feedback">
            @Html.EditorFor(model => model.stockDisponible, new { htmlAttributes = new { @class = "form-control has-feedback-left", placeholder = "Stock Disponible", autocomplete = "off" } })
            <span class="fa fa-dolly form-control-feedback left" aria-hidden="true"></span>
            @Html.ValidationMessageFor(model => model.stockDisponible, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-9 col-sm-9">
            @*<div class="col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.estado, new { @class = "flat", @checked = "checked" }) Estado
                        </label>
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="checkbox">
                <label>
                    @*<input type="checkbox" checked> Estado*@
                    @Html.CheckBoxFor(model => model.estado, new { @class = "flat", @checked = "checked" }) Estado
                </label>
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success btn-sm">
                    <i class="fa fa-edit"></i> Editar
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
